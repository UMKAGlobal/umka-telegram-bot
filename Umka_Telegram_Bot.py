import asyncio
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
CHANNEL_ID = -4782134982  # ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [[InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –¥–µ—Ç—Å–∫–∏–π —Å–∞–¥", callback_data='register_daycare')],
                [InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–µ—Ç–Ω–µ–º –ª–∞–≥–µ—Ä–µ", callback_data='info_camp')],
                [InlineKeyboardButton("–£–∑–Ω–∞—Ç—å –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤ 1 –∫–ª–∞—Å—Å", callback_data='info_school')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ UMKA Bilingual School & Kindergarten!\n–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=reply_markup
    )

async def handle_button_click(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    if query.data == 'register_daycare':
        await query.edit_message_text(
            text="–î–ª—è –∑–∞–ø–∏—Å–∏ –≤ –¥–µ—Ç—Å–∫–∏–π —Å–∞–¥, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –∏–º—è, –≤–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä. –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π."
        )
    elif query.data == 'info_camp':
        await query.edit_message_text(
            text="–õ–µ—Ç–Ω–∏–π –ª–∞–≥–µ—Ä—å (–∏—é–Ω—å - –∏—é–ª—å)\n\n–í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –≥—Ä—É–ø–ø—ã: 3-5 –ª–µ—Ç –∏ 6-8 –ª–µ—Ç\n–ü—Ä–æ–µ–∫—Ç—ã: My Little Village, –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è, –ø–ª–∞–≤–∞–Ω–∏–µ, —Å–µ—Ä—Ñ–∏–Ω–≥, –ø–∏–∫–Ω–∏–∫–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!\n\n–ù–∞–ø–∏—à–∏—Ç–µ '–•–æ—á—É –≤ –ª–∞–≥–µ—Ä—å', —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!"
        )
    elif query.data == 'info_school':
        await query.edit_message_text(
            text="–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ 1 –∫–ª–∞—Å—Å (2025 —É—á–µ–±–Ω—ã–π –≥–æ–¥)\n\n–°–æ–≤–º–µ—Å—Ç–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å The First Academy, –∞–¥–∞–ø—Ç–∞—Ü–∏—è –ø–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω–∏–∫–æ–≤ –∏ –º—è–≥–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥ –æ—Ç –¥–µ—Ç—Å–∫–æ–≥–æ —Å–∞–¥–∞.\n\n–ù–∞–ø–∏—à–∏—Ç–µ '–•–æ—á—É –≤ 1 –∫–ª–∞—Å—Å', —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!"
        )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_message = update.message.text
    user_name = update.message.from_user.username or update.message.from_user.full_name
    chat_id = update.message.chat_id

    message_to_channel = f"üì¨ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{user_name} (ID: {chat_id}):\n\n{user_message}"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
    await context.bot.send_message(chat_id=CHANNEL_ID, text=message_to_channel)

async def run_bot():
    try:
        app = ApplicationBuilder().token(TOKEN).build()
        app.add_handler(CommandHandler("start", start))
        app.add_handler(CallbackQueryHandler(handle_button_click))
        app.add_handler(CommandHandler("register", handle_message))  # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π

        print("Bot is running...")
        await app.initialize()
        await app.start()
        await app.updater.start_polling()
        await app.updater.idle()
    except Exception as e:
        print(f"Error: {e}")
        await asyncio.sleep(5)  # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
        await run_bot()

if __name__ == "__main__":
    asyncio.run(run_bot())
